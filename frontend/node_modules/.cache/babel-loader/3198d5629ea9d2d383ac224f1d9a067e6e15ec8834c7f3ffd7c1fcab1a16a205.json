{"ast":null,"code":"var _jsxFileName = \"/Users/lucasi/HT6/code-duel/frontend/src/context/SocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext({\n  socket: null,\n  isConnected: false\n});\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000');\n    newSocket.on('connect', () => {\n      console.log('ðŸ”Œ Connected to server');\n      setIsConnected(true);\n    });\n    newSocket.on('disconnect', () => {\n      console.log('ðŸ”Œ Disconnected from server');\n      setIsConnected(false);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      isConnected\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"QMiDLkz4HTcH977k6GWSjZyAdcs=\");\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","jsxDEV","_jsxDEV","SocketContext","socket","isConnected","useSocket","_s","context","Error","SocketProvider","children","_s2","setSocket","setIsConnected","newSocket","process","env","REACT_APP_SERVER_URL","on","console","log","close","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucasi/HT6/code-duel/frontend/src/context/SocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface SocketContextType {\n  socket: Socket | null;\n  isConnected: boolean;\n}\n\nconst SocketContext = createContext<SocketContextType>({\n  socket: null,\n  isConnected: false,\n});\n\nexport const useSocket = () => {\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n\ninterface SocketProviderProps {\n  children: React.ReactNode;\n}\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({ children }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    const newSocket = io(process.env.REACT_APP_SERVER_URL || 'http://localhost:5000');\n\n    newSocket.on('connect', () => {\n      console.log('ðŸ”Œ Connected to server');\n      setIsConnected(true);\n    });\n\n    newSocket.on('disconnect', () => {\n      console.log('ðŸ”Œ Disconnected from server');\n      setIsConnected(false);\n    });\n\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  return (\n    <SocketContext.Provider value={{ socket, isConnected }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,EAAE,QAAgB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,aAAa,gBAAGP,aAAa,CAAoB;EACrDQ,MAAM,EAAE,IAAI;EACZC,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGX,UAAU,CAACM,aAAa,CAAC;EACzC,IAAI,CAACK,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,SAAS;AAYtB,OAAO,MAAMI,cAA6C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7E,MAAM,CAACR,MAAM,EAAES,SAAS,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACM,WAAW,EAAES,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAGf,EAAE,CAACgB,OAAO,CAACC,GAAG,CAACC,oBAAoB,IAAI,uBAAuB,CAAC;IAEjFH,SAAS,CAACI,EAAE,CAAC,SAAS,EAAE,MAAM;MAC5BC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCP,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC;IAEFC,SAAS,CAACI,EAAE,CAAC,YAAY,EAAE,MAAM;MAC/BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CP,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC;IAEFD,SAAS,CAACE,SAAS,CAAC;IAEpB,OAAO,MAAM;MACXA,SAAS,CAACO,KAAK,CAAC,CAAC;IACnB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA,CAACC,aAAa,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,MAAM;MAAEC;IAAY,CAAE;IAAAM,QAAA,EACpDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAAChB,GAAA,CA7BWF,cAA6C;AAAAmB,EAAA,GAA7CnB,cAA6C;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}